server {
    server_name softdab.tech www.softdab.tech;

    # PERFORMANCE OPTIMIZATIONS
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        application/xhtml+xml
        image/svg+xml;

    # Enable Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/rss+xml text/javascript image/svg+xml application/x-font-ttf image/x-icon;

    # Client settings
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Frontend (статика)
    root /var/www/html;
    index index.html;

    # Логи
    access_log /var/log/nginx/softdab-access.log;
    error_log /var/log/nginx/softdab-error.log;

    # Admin API
    location /admin/api/ {
        proxy_pass http://127.0.0.1:8001/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # API caching
        proxy_cache_valid 200 5m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
    }

    # Admin Panel - handled by SPA
    location /admin {
        root /var/www/html;
        try_files $uri $uri/ /index.html;
        
        # No cache for admin pages
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        expires -1;
    }

    # Main API - optimized for performance
    location /api/ {
        proxy_pass http://127.0.0.1:8000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Enable compression for API responses
        gzip_proxied any;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # AGGRESSIVE STATIC FILE CACHING
    location ~* \.(js|css|woff2|woff|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Precompressed files
        location ~* \.js$ {
            gzip_static on;
        }
        location ~* \.css$ {
            gzip_static on;
        }
    }

    # Images optimization
    location ~* \.(png|jpg|jpeg|gif|ico|svg|webp|avif)$ {
        expires 6M;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Try to serve WebP/AVIF if browser supports
        location ~* \.(png|jpg|jpeg)$ {
            try_files $uri$webp_suffix $uri =404;
        }
    }

    # WebP support
    map $http_accept $webp_suffix {
        "~*webp" ".webp";
    }

    # Preload critical resources
    location = / {
        add_header Link "</assets/css/main.css>; rel=preload; as=style";
        add_header Link "</assets/js/main.js>; rel=preload; as=script";
        try_files $uri /index.html;
    }

    # SPA fallback - optimized caching
    location / {
        # Don't cache HTML to always get fresh builds
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        expires -1;
        
        try_files $uri $uri/ /index.html;
    }

    # Explicitly disable cache for index.html  
    location = /index.html {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        expires -1;
        
        # Preload critical resources
        add_header Link "</assets/css/main.css>; rel=preload; as=style";
        add_header Link "</assets/js/main.js>; rel=preload; as=script";
    }

    # SEO files - cache but allow updates
    location ~* \/(sitemap\.xml|robots\.txt)$ {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # Security headers - optimized
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Performance headers
    add_header X-Cache-Status $upstream_cache_status;

    # SSL configuration
    listen 443 ssl http2; # Enable HTTP/2
    ssl_certificate /etc/letsencrypt/live/softdab.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/softdab.tech/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    # SSL optimizations
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
}

# HTTP to HTTPS redirect
server {
    if ($host = www.softdab.tech) {
        return 301 https://$host$request_uri;
    }

    if ($host = softdab.tech) {
        return 301 https://$host$request_uri;
    }

    listen 80;
    server_name softdab.tech www.softdab.tech;
    return 404;
}